# This workflow will build and push a Docker container to an Azure Web App when a commit is pushed to your default branch.

name: Deploy website Docker container to Azure Web App

on:
  push:
    branches: [ "main" ]
    paths: ['openaiproxywebsite/**']
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'aiassitantwebsite'    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: 'openaiproxywebsite'      # set this to the path to your web app project
  REGISTRY_URL: 'veritasbackendserviceregistry.azurecr.io'     # set this to your Azure Container Registry URL
  REPOSITORY_NAME: 'openaiproxywebsite'      # set this to your container repository name
  IMAGE_TAG: latest

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        push: true
        tags: ${{ env.REGISTRY_URL }}/${{ env.REPOSITORY_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'openaiproxywebsite'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: 'Deploy to Azure Web App as Container'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'Production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: ${{ env.REGISTRY_URL }}/${{ env.REPOSITORY_NAME }}:${{ env.IMAGE_TAG }}
